<Page
	x:Class="Booru_Viewer.MainPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:Booru_Viewer"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:vm1="using:Booru_Viewer.ViewModels"
	xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
	xmlns:wrapPanel="using:Microsoft.Toolkit.Uwp.UI.Controls.WrapPanel"
	xmlns:mvvml="using:GalaSoft.MvvmLight"
	mc:Ignorable="d"
	RequestedTheme="Default"
	x:Name="Page"
	xmlns:i="using:Microsoft.Xaml.Interactivity"
	xmlns:core="using:Microsoft.Xaml.Interactions.Core">

	<Page.DataContext>
		<vm1:MainPageViewModel></vm1:MainPageViewModel>
	</Page.DataContext>

	<Page.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Assets/ColorDict.xaml"/>
			</ResourceDictionary.MergedDictionaries>

			<DataTemplate x:Name="ImageTemplate">
				<controls:ImageEx Name="Image"
								  Source="{Binding Path=PreviewURL}"
								  Stretch="Uniform"
								  ImageExOpened="ImageOpened"
								  ImageExFailed="ImageEx_OnImageExFailed"
								  MaxHeight="250"
								  MinHeight="160"
								  MinWidth="160"
				                 >
					<controls:ImageEx.ContextFlyout>
						<MenuFlyout x:Name="ImageContextFlyout">
							<MenuFlyoutItem Text="Save Image"
							                Command="{Binding ElementName=Page, Path=DataContext.SaveImage}"
											>
								<MenuFlyoutItem.CommandParameter>
									<x:Boolean>True</x:Boolean>
								</MenuFlyoutItem.CommandParameter>
							</MenuFlyoutItem>
							<!--<MenuFlyoutItem Text="Select"
											Command="{Binding EnableMultiSelect}"/>-->
						</MenuFlyout>
					</controls:ImageEx.ContextFlyout>
					<controls:ImageEx.Resources>

					</controls:ImageEx.Resources>

					<!--<i:Interaction.Behaviors>
						<core:EventTriggerBehavior EventName="RightTapped" x:Name="RightTappedEventBehavior"
												   >
							<core:InvokeCommandAction Command="{Binding ElementName=Page, Path=DataContext.ImageContextOpened}"
							                          CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SourceObject}"
							/>
						</core:EventTriggerBehavior>
					</i:Interaction.Behaviors>-->
				</controls:ImageEx>
			</DataTemplate>
			<DataTemplate x:Name="Tag">
				<StackPanel Orientation="Horizontal"
							Background="{StaticResource ThemeBrush}"
							BorderThickness="1"
							Margin="0">
					<StackPanel.BorderBrush>
						<SolidColorBrush Color="{ThemeResource SystemBaseLowColor}"/>
					</StackPanel.BorderBrush>
					<TextBlock Name="Tag"
							   Text="{Binding Path=Tag, Mode=TwoWay}" 
							   MinWidth="20" 
							   Margin="8,0" 
							   HorizontalAlignment="Center" 
							   VerticalAlignment="Center"
							   />
					<Button Command="{Binding FavouriteTag, Mode=TwoWay}"
					        Background="#FF7C7C7C">
						<SymbolIcon Symbol="{Binding FavouriteIcon}"/>
					</Button>
					<Button Command="{Binding RemoveTag, Mode=TwoWay}"
							Background="#FF7C7C7C"
					        Margin="4, 0, 0, 0">
						<SymbolIcon Symbol="Cancel"
									/>
					</Button>
				</StackPanel>
			</DataTemplate>
			<DataTemplate x:Key="FavouriteTag" x:DataType="vm1:TagViewModel">
				<StackPanel Orientation="Horizontal"
				            Background="{StaticResource ThemeBrush}"
				            BorderThickness="1"
				            Margin="0">
					<StackPanel.BorderBrush>
						<SolidColorBrush Color="{ThemeResource SystemBaseLowColor}"/>
					</StackPanel.BorderBrush>
					<TextBlock Name="Tag"
					           Text="{Binding Path=Tag, Mode=TwoWay}" 
					           MinWidth="20" 
					           Margin="8,0" 
					           HorizontalAlignment="Center" 
					           VerticalAlignment="Center"
					/>
					<Button Command="{Binding UnfavouriteTag, Mode=TwoWay}"
					        Background="#FF7C7C7C">
						<SymbolIcon Symbol="Cancel"/>
					</Button>
					<Button Command="{Binding AddTagToSearch, Mode=TwoWay}"
							CommandParameter="{x:Bind Tag}"
					        Background="#FF7C7C7C"
					        Margin="4, 0, 0, 0">
						<SymbolIcon Symbol="Add"
									/>
					</Button>
					<Button Command="{Binding StartSearchFromFavourite, Mode=TwoWay}"
							CommandParameter="{x:Bind Tag}"
					        Background="#FF7C7C7C"
							Margin="4, 0, 0, 0">
						<SymbolIcon Symbol="Find"/>
					</Button>
				</StackPanel>
			</DataTemplate>
			<DataTemplate x:Key="SavedSearch"
						  >
				<StackPanel Orientation="Horizontal"
							BorderThickness="1" 
							Background="{StaticResource ThemeBrush}"
							>
					<StackPanel.BorderBrush>
						<SolidColorBrush Color="{ThemeResource SystemBaseLowColor}"/>
					</StackPanel.BorderBrush>


					<TextBlock 
						Text="{Binding Path=Search}" MaxLines="2"
						TextWrapping="WrapWholeWords"
						Margin="8, 0"
						VerticalAlignment="Center"
						Foreground="White"/>

					<Button Command="{Binding Path=DeleteSearch}"
							Background="#FF7C7C7C">
						<Button.Content>
							<SymbolIcon Symbol="Delete"/>
						</Button.Content>
					</Button>
				</StackPanel>
			</DataTemplate>
			<DataTemplate x:Key="SuggestedTag">
				<StackPanel Orientation="Horizontal"
							BorderThickness="1" Margin="2, -2"
							Background="{StaticResource ThemeBrush}"
							>
					<StackPanel.BorderBrush>
						<SolidColorBrush Color="{ThemeResource SystemBaseLowColor}"/>
					</StackPanel.BorderBrush>
					<TextBlock Text="{Binding Tag}"
							   Margin="8"/>
				</StackPanel>
			</DataTemplate>
			<Style x:Key="TagStyleNoMargin" TargetType="SelectorItem">
				<Setter Property="Margin" Value="-12, -4"></Setter>
			</Style>

			<Style TargetType="Button" x:Key="CircularButton">

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Button">
							<Border CornerRadius="90" 
									Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
								<ContentPresenter x:Name="contentPresenter"
												  ContentTemplate="{TemplateBinding ContentTemplate}"
												  Content="{TemplateBinding Content}" 
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
												  Margin="{TemplateBinding Padding}" 
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Page.Resources>
	<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
		  Name="RootGrid" MinHeight="250">
		<controls:AdaptiveGridView   Background="{StaticResource BackgroundThemeBrush}"
					ItemTemplate="{StaticResource ImageTemplate}"
					ItemsSource="{Binding Path=Thumbnails}"
					SelectionMode="None"
					Margin="0, 24, 0, 0" 
					x:Name="ImageGridView"
					AllowFocusOnInteraction="True"
					IncrementalLoadingThreshold="1"
					IncrementalLoadingTrigger="Edge"
					SelectionChanged="GridView_SelectionChanged"
					IsItemClickEnabled="True"
					ItemClick="ImageGridView_OnItemClick"
					DesiredWidth="200"
		                            >
			<i:Interaction.Behaviors>
				<core:EventTriggerBehavior SourceObject="{Binding ElementName=ImageGridView}">
					<core:InvokeCommandAction Command="{Binding ImageContextOpened}"></core:InvokeCommandAction>
				</core:EventTriggerBehavior>
			</i:Interaction.Behaviors>
			<controls:AdaptiveGridView.Resources
	>


			</controls:AdaptiveGridView.Resources>
		</controls:AdaptiveGridView>
		<TextBlock Text="{Binding NoImagesText}"
				   Visibility="{Binding DontHaveImages}"
				   Margin="20, 40"
				   TextWrapping="WrapWholeWords"
				   VerticalAlignment="Center"
				   HorizontalAlignment="Center"/>


		<Button VerticalAlignment="Bottom" HorizontalAlignment="Right" 
				Height="44" Margin="0,0,32,12" Width="44"
				Padding="4"
				BorderThickness="3" Style="{StaticResource CircularButton}"
				HorizontalContentAlignment="Center"
				VerticalContentAlignment="Center"
				Tapped="BackToTopTapped"
				ToolTipService.ToolTip="Back to Top"
				ToolTipService.Placement="Top">


			<Button.Background>
				<SolidColorBrush Opacity="0.4"
								 Color="Gray"/>
			</Button.Background>

			<Button.Foreground>
				<SolidColorBrush Color="{ThemeResource SystemAccentColor}">

				</SolidColorBrush>
			</Button.Foreground>
			<Button.BorderBrush>
				<SolidColorBrush Color="{ThemeResource SystemAccentColor}"/>
			</Button.BorderBrush>
			<Button.Content>
				<StackPanel>
					<SymbolIcon Symbol="Up"></SymbolIcon>
				</StackPanel>
			</Button.Content>
		</Button>

		<ContentDialog IsPrimaryButtonEnabled="True"
					   IsSecondaryButtonEnabled="True"
			PrimaryButtonCommand="{Binding StartImageSave}"
					   PrimaryButtonClick="SaveAllDialog"
					   SecondaryButtonClick="SaveAllDialog"
					   PrimaryButtonCommandParameter="{x:Bind PageToCB.SelectedItem}"
					   Name="SaveAllDialogBox"
					   PrimaryButtonText="Save"
					   SecondaryButtonText="Cancel">
			<StackPanel>

				<StackPanel Orientation="Horizontal">
					<TextBlock Text="To Page"></TextBlock>
					<ComboBox ItemsSource="{Binding TotalPageNumber}" SelectedIndex="{Binding SelectedPageToSave, Mode=TwoWay}"  Name="PageToCB"></ComboBox>
				</StackPanel>

			</StackPanel>


		</ContentDialog>


	</Grid>
	<Page.BottomAppBar>
		<CommandBar VerticalAlignment="Bottom">
			<CommandBar.PrimaryCommands>

				<AppBarButton Label="Search" Icon="Find"
							  Name="SearchAppBarButton">
					<AppBarButton.Flyout>
						<Flyout x:Name="SearchFlyout">
							<Flyout.FlyoutPresenterStyle>
								<Style TargetType="FlyoutPresenter">
									<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
									<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
								</Style>
							</Flyout.FlyoutPresenterStyle>
							<StackPanel Orientation="Vertical">
								<StackPanel Margin="0, 0, 12, 0"
											MaxHeight="250"
											  MinHeight="80">
									<TextBlock Text="Favourite Tags"/>
									<ListView ItemsSource="{Binding FavouriteTags}"
											  ItemTemplate="{StaticResource FavouriteTag}"
											  SelectionChanged="SavedSearchSelection"
											  SelectedIndex="{Binding SelectedSavedSearch, Mode=TwoWay}"
											  Name="SavedSearchesList"
											  MaxHeight="220"
											  ItemContainerStyle="{StaticResource TagStyleNoMargin}"
											  IsItemClickEnabled="True"
											  SelectionMode="None"
											  ItemClick="SavedSearchesList_OnItemClick"
											  ReorderMode="Enabled"
											  CanReorderItems="True"
											  AllowDrop="True"
											  DragItemsCompleted="SavedSearchesList_OnDragItemsCompleted">

									</ListView>
									<TextBlock Text="You have no favourite tags yet"
											   FontSize="12"
											   Visibility="{Binding HaveSavedSearches}"/>
								</StackPanel>
								<StackPanel Orientation="Vertical" MaxWidth="350">
									<TextBlock Text="Add tags"></TextBlock>
									<StackPanel Orientation="Horizontal">
										<StackPanel VerticalAlignment="Top">
											<TextBlock Text="Prefix"/>
											<ListBox SelectedIndex="{Binding SelectedPrefixIndex, Mode=TwoWay}"
												ItemsSource="{Binding Prefixes}"
												Margin="4, 0"
												AllowFocusOnInteraction="True">
												<ListBox.ItemsPanel>
													<ItemsPanelTemplate>
														<StackPanel Orientation="Horizontal"></StackPanel>
													</ItemsPanelTemplate>
												</ListBox.ItemsPanel>
												<ListBox.ItemContainerStyle>
													<Style TargetType="ListBoxItem">
														<Setter Property="Padding" Value="8"></Setter>
													</Style>
												</ListBox.ItemContainerStyle>
											</ListBox>
										</StackPanel>
										<AutoSuggestBox PlaceholderText="Tag"
													Name="TagTextBox"
													MinWidth="200"
													Text="{Binding CurrentTag, Mode=TwoWay, 
														UpdateSourceTrigger=PropertyChanged}"
													TextChanged="TagTextBox_TextChanged"
													AllowFocusOnInteraction="True"
													KeyUp="TagTextBox_KeyUp"
													ItemsSource="{Binding SuggestedTags}"
													UpdateTextOnSelect="True"
													VerticalAlignment="Center"
													>
											<AutoSuggestBox.TextBoxStyle>
												<Style TargetType="TextBox">
													<Setter Property="IsTextPredictionEnabled" Value="False"/>
												</Style>
											</AutoSuggestBox.TextBoxStyle>
										</AutoSuggestBox>

										<Button Name="AddTagButton" 
											Margin="4, 0, 0, 0"
											Background="{StaticResource ThemeBrush}" 
											Foreground="White"
											Click="AddTagClicked"
											Command="{Binding AddTag}">
											<Button.Content>
												<SymbolIcon>Add</SymbolIcon>
											</Button.Content>
										</Button>

									</StackPanel>

									<StackPanel Orientation="Horizontal" Margin="0, 4">
										<Button Command="{Binding DecrementPage}"
												Margin="4, 0, 2, 0">
											<Button.Content>
												<StackPanel>
													<SymbolIcon Symbol="Remove"/>
												</StackPanel>
											</Button.Content>
										</Button>
										<TextBox Text="{Binding PageNum, Mode=TwoWay}"
											 HorizontalAlignment="Left"
											 Margin="4, 0"
											 PlaceholderText="Page"
											 AllowFocusOnInteraction="True"
											 Name="StartPageTextBox"
											 InputScope="Number"/>

										<Button Command="{Binding IncrementPage}"
												Margin="2, 0, 4, 0">
											<Button.Content>
												<StackPanel>
													<SymbolIcon Symbol="Add"/>
												</StackPanel>
											</Button.Content>
										</Button>
										<ComboBox ItemsSource="{Binding OrderOptions}"
												  SelectedIndex="{Binding SelectedOrderIndex, Mode=TwoWay}"
												  AllowFocusOnInteraction="True"
												  PlaceholderText="Order by"/>
									</StackPanel>
									<ListView
											ItemsSource="{Binding CurrentTags, Mode=TwoWay}"
											ItemTemplate="{StaticResource Tag}"
											MinHeight="20"
											SelectionMode="None"
											ItemContainerStyle="{StaticResource TagStyleNoMargin}"
											HorizontalContentAlignment="Left"
											MaxWidth="{Binding ElementName=RootGrid, Path=ActualWidth}"
											Name="CurrentTagsList">
										<ListView.ItemsPanel>
											<ItemsPanelTemplate>
												<wrapPanel:WrapPanel Orientation="Horizontal"
																	   />
											</ItemsPanelTemplate>
										</ListView.ItemsPanel>
									</ListView>

									<StackPanel Orientation="Horizontal"
											FlowDirection="RightToLeft"
												 Margin="8">
										<Button
											Content="Search Your Favourites"
											Command="{Binding SearchFavourites}"
											Visibility="{Binding IsFavButtonVisible}"
											Name="SearchFavouritesButton"
											Margin="8, 0"></Button>

									</StackPanel>
									<TextBlock Text="This search will return empty because you
											   have more than 2 tags and are not signed in" 
											   TextWrapping="WrapWholeWords"
											   Visibility="{Binding IsSignedOutWithMoreThan2Tags}"/>
									<Button MinWidth="290" HorizontalAlignment="Center"
										Background="{StaticResource ThemeBrush}" 
										Foreground="White"
										Command="{Binding StartSearch}"
										Name="SearchButton"
											Tapped="SearchButton_OnTapped">

										<Button.Content>
											<SymbolIcon>Find</SymbolIcon>
										</Button.Content>
									</Button>
								</StackPanel>
							</StackPanel>
						</Flyout>
					</AppBarButton.Flyout>
				</AppBarButton>
				<AppBarButton Label="Settings" Icon="Setting"
							  Tapped="SettingsTapped">
					<AppBarButton.Flyout>
						<Flyout>
							<Flyout.FlyoutPresenterStyle>
								<Style TargetType="FlyoutPresenter">
									<Setter Property="Height" Value="{ThemeResource FlyoutThemeMaxHeight}"></Setter>
									<Setter Property="IsTapEnabled" Value="True"/>
									<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" 
											Value="Disabled"/>
								</Style>
							</Flyout.FlyoutPresenterStyle>
							<StackPanel Orientation="Vertical" MinWidth="300">
								<StackPanel Orientation="Horizontal">
									<CheckBox Content="Safe"
											  MinWidth="42"
											  Name="SafeCheckbox"
											  IsChecked="{Binding SafeChecked, Mode=TwoWay}"
											  Command="{Binding CheckBoxChanged}"
											  Margin="4"
											  CommandParameter="{Binding ElementName=SafeCheckbox}"/>
									<CheckBox Content="Questionable"
											  Name="QuestionableCheckbox"
											  IsChecked="{Binding QuestionableChecked, Mode=TwoWay}"
											  Command="{Binding CheckBoxChanged}"
											  CommandParameter="{Binding ElementName=QuestionableCheckbox}"
											  MinWidth="42"
											  Margin="4"/>
									<CheckBox Content="Explicit"
											  Name="ExplicitCheckbox"
											  IsChecked="{Binding ExplicitChecked, Mode=TwoWay}"
											  Command="{Binding CheckBoxChanged}"
											  CommandParameter="{Binding ElementName=ExplicitCheckbox}"
											  MinWidth="42"
											  Margin="4"/>
								</StackPanel>
								<Slider 
									Header="Images Per Page"
									Maximum="100"
									Minimum="10"
									StepFrequency="1"
									SnapsTo="StepValues"
									Name="PerPageSlider"
									PointerReleased="{x:Bind ViewModel.PerPageChangedEx}"
									PointerExited="{x:Bind ViewModel.PerPageChangedEx}"
									
									Loaded="PerPageSlider_OnLoaded"
									Value="{Binding PerPage, Mode=TwoWay}">

									<!--<i:BehaviorCollection>
										<core:EventTriggerBehavior EventName="PointerReleased">
											<core:InvokeCommandAction Command="{Binding PerPageChanged}"
																	  CommandParameter="{Binding ElementName=PerPageSlider,
												Path=Value}"></core:InvokeCommandAction>
										</core:EventTriggerBehavior>
									</i:BehaviorCollection>-->

								</Slider>
								<TextBlock Text="Login Details"
										   Margin="0, 0, 0, 5"/>
								<TextBox PlaceholderText="Username"
										 Margin="0, 0, 0, 5"
										 Text="{Binding Username, Mode=TwoWay}"
										 AllowFocusOnInteraction="True"
										 Name="UsernameTextBox"
										 LostFocus="TextBox_OnLostFocus"/>
								<TextBox PlaceholderText="API Key"
										 Margin="0, 0, 0, 5"
										 Text="{Binding APIKey, Mode=TwoWay}"
										 AllowFocusOnInteraction="True"
										 IsEnabled="True" InputScope="Text" IsSpellCheckEnabled="False"
										 Name="APIKeyTextBox"
										 TextChanged="APIKeyTextBox_TextChanged"
										 LostFocus="TextBox_OnLostFocus"/>

								<Button Width="280" HorizontalAlignment="Center"
										Background="{StaticResource ThemeBrush}"
										Foreground="White"
										Command="{Binding SaveLoginData}"
										Tapped="SaveLoginDataButtonTapped">
									<Button.Content>
										<SymbolIcon>Save</SymbolIcon>
									</Button.Content>
								</Button>
								<TextBlock Text="Save Folder" Margin="4"/>
								<StackPanel Orientation="Horizontal" Margin="4">


									<Button Content="Change Folder"
											Command="{Binding ChooseSaveFolder}"
											CommandParameter="{Binding ElementName=ChooseFolderButton}"
											Name="ChooseFolderButton"/>
									<TextBlock Text="Current:" VerticalAlignment="Center" Margin="4"/>


								</StackPanel>
								<TextBlock Text="{Binding SaveFolder}" VerticalAlignment="Center" Margin="4"
								           TextWrapping="WrapWholeWords"/>

								<StackPanel Margin="4">
									<TextBlock Text="Back up or restore your settings and saved searches"
									          TextWrapping="WrapWholeWords"></TextBlock>
									<StackPanel Orientation="Horizontal">
										<Button Content="Backup" Command="{Binding Backup}"
												Margin="4"></Button>
										<Button Content="Restore" Command="{Binding Restore}"
												Margin="4"></Button>
									</StackPanel>
								</StackPanel>
								<!--<Button Content="Use a Dropbox Folder"
										Command="{Binding SelectDropboxFolder}"/>-->
							</StackPanel>
						</Flyout>
					</AppBarButton.Flyout>
				</AppBarButton>
			</CommandBar.PrimaryCommands>
			<CommandBar.SecondaryCommands>
				<AppBarButton Click="SaveAllClicked"
							  Label="Save current search">

				</AppBarButton>
			</CommandBar.SecondaryCommands>
		</CommandBar>
	</Page.BottomAppBar>
</Page>
	