<Page
	x:Class="Booru_Viewer.MainPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:Booru_Viewer"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:vm1="using:Booru_Viewer.ViewModels"
	xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
	xmlns:wrapPanel="using:Microsoft.Toolkit.Uwp.UI.Controls.WrapPanel"
	xmlns:mvvml="using:GalaSoft.MvvmLight"
	mc:Ignorable="d"
	RequestedTheme="Default"
	Name="Page"
	xmlns:i="using:Microsoft.Xaml.Interactivity"
	xmlns:core="using:Microsoft.Xaml.Interactions.Core">

	<Page.DataContext>
		<vm1:MainPageViewModel></vm1:MainPageViewModel>
	</Page.DataContext>

	<Page.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Assets/ColorDict.xaml"/>
			</ResourceDictionary.MergedDictionaries>

			<DataTemplate x:Name="ImageTemplate">
				<controls:ImageEx Name="Image"
								  Source="{Binding Path=PreviewURL}"
								  MaxWidth="{Binding ElementName=Page, Path=DataContext.ImageSize, Mode=OneWay}"
								  MaxHeight="{Binding ElementName=Page, Path=DataContext.ImageSize, Mode=OneWay}"
								  Height="{Binding ElementName=Page, Path=DataContext.ImageSize, Mode=OneWay}"
								  Width="{Binding ElementName=Page, Path=DataContext.ImageSize, Mode=OneWay}"
								  Stretch="Uniform">


					<controls:ImageEx.ContextFlyout>
						<MenuFlyout>
							<MenuFlyoutItem Text="Save Image"
											Command="{Binding SaveImage}"/>
							<MenuFlyoutItem Text="Select"
											Command="{Binding EnableMultiSelect}"/>
						</MenuFlyout>
					</controls:ImageEx.ContextFlyout>
				</controls:ImageEx>
			</DataTemplate>
			<DataTemplate x:Name="Tag">
				<StackPanel Orientation="Horizontal"
							Background="{StaticResource ThemeBrush}"
							BorderThickness="1"
							Margin="0">
					<StackPanel.BorderBrush>
						<SolidColorBrush Color="{ThemeResource SystemBaseLowColor}"/>
					</StackPanel.BorderBrush>
					<TextBlock Name="Tag"
							   Text="{Binding Path=Tag, Mode=TwoWay}" 
							   MinWidth="20" 
							   Margin="8,0" 
							   HorizontalAlignment="Center" 
							   VerticalAlignment="Center"
							   />
					<Button Command="{Binding RemoveTag, Mode=TwoWay}"
							Background="#FF7C7C7C">
						<SymbolIcon Symbol="Cancel"/>
					</Button>
				</StackPanel>
			</DataTemplate>
			<DataTemplate x:Key="SavedSearch"
						  >
				<StackPanel Orientation="Horizontal"
							BorderThickness="1" 
							Background="{StaticResource ThemeBrush}"
							>
					<StackPanel.BorderBrush>
						<SolidColorBrush Color="{ThemeResource SystemBaseLowColor}"/>
					</StackPanel.BorderBrush>


					<TextBlock 
						Text="{Binding Path=Search}" MaxLines="2"
						TextWrapping="WrapWholeWords"
						Margin="8, 0"
						VerticalAlignment="Center"
						Foreground="White"/>

					<Button Command="{Binding Path=DeleteSearch}"
							Background="#FF7C7C7C">
						<Button.Content>
							<SymbolIcon Symbol="Delete"/>
						</Button.Content>
					</Button>
				</StackPanel>
			</DataTemplate>
			<DataTemplate x:Key="SuggestedTag">
				<StackPanel Orientation="Horizontal"
							BorderThickness="1" Margin="2, -2"
							Background="{StaticResource ThemeBrush}"
							>
					<StackPanel.BorderBrush>
						<SolidColorBrush Color="{ThemeResource SystemBaseLowColor}"/>
					</StackPanel.BorderBrush>
					<TextBlock Text="{Binding Tag}"
							   Margin="8"/>
				</StackPanel>
			</DataTemplate>
			<Style x:Key="TagStyleNoMargin" TargetType="SelectorItem">
				<Setter Property="Margin" Value="-12, -4"></Setter>
			</Style>

			<Style TargetType="Button" x:Key="CircularButton">

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Button">
							<Border CornerRadius="90" 
									Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
								<ContentPresenter x:Name="contentPresenter"
												  ContentTemplate="{TemplateBinding ContentTemplate}"
												  Content="{TemplateBinding Content}" 
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
												  Margin="{TemplateBinding Padding}" 
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Page.Resources>
	<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
		  Name="RootGrid">

		<GridView   Background="{StaticResource BackgroundThemeBrush}"
					ItemTemplate="{StaticResource ImageTemplate}"
					ItemsSource="{Binding Path=Thumbnails, Mode=TwoWay}"
					SelectionMode="None"
					Margin="0, 25, 0, 0" 
					x:Name="ImageGridView"
					AllowFocusOnInteraction="True"
					IncrementalLoadingThreshold="1"
					IncrementalLoadingTrigger="Edge"
					SelectionChanged="GridView_SelectionChanged"
					IsItemClickEnabled="True"
					ItemClick="ImageGridView_OnItemClick">

		</GridView>
		<Button VerticalAlignment="Bottom" HorizontalAlignment="Right" 
				Height="44" Margin="0,0,32,12" Width="44"
				Padding="4"
				BorderThickness="3" Style="{StaticResource CircularButton}"
				HorizontalContentAlignment="Center"
				VerticalContentAlignment="Center"
				Tapped="BackToTopTapped">

			<Button.Background>
				<SolidColorBrush Opacity="0.4"
								 Color="Gray"/>
			</Button.Background>

			<Button.Foreground>
				<SolidColorBrush Color="{ThemeResource SystemAccentColor}">

				</SolidColorBrush>
			</Button.Foreground>
			<Button.BorderBrush>
				<SolidColorBrush Color="{ThemeResource SystemAccentColor}"/>
			</Button.BorderBrush>
			<Button.Content>
				<StackPanel>
					<SymbolIcon Symbol="Up"></SymbolIcon>
				</StackPanel>
			</Button.Content>
		</Button>




	</Grid>
	<Page.BottomAppBar>
		<CommandBar VerticalAlignment="Bottom">
			<CommandBar.PrimaryCommands>

				<AppBarButton Label="Search" Icon="Find"
							  Name="SearchAppBarButton">
					<AppBarButton.Flyout>
						<Flyout x:Name="SearchFlyout">
							<StackPanel Orientation="Vertical">
								<StackPanel Margin="0, 0, 12, 0"
											MaxHeight="250"
											  MinHeight="80">
									<TextBlock Text="Saved Searches"/>
									<ListView ItemsSource="{Binding SavedSearches}"
											  ItemTemplate="{StaticResource SavedSearch}"
											  SelectionChanged="SavedSearchSelection"
											  SelectedIndex="{Binding SelectedSavedSearch, Mode=TwoWay}"
											  Name="SavedSearchesList"
											  MaxHeight="220"
											  ItemContainerStyle="{StaticResource TagStyleNoMargin}"
											  IsItemClickEnabled="True"
											  SelectionMode="None"
											  ItemClick="SavedSearchesList_OnItemClick">
										<i:Interaction.Behaviors>
											<core:EventTriggerBehavior EventName="ItemClick" >
												<core:InvokeCommandAction Command="{Binding SavedSearchSelected}"
																		  CommandParameter="{Binding ElementName=SavedSearchesList, Path=SelectedItem}"
																		  x:Name="SavedSearchCommandInvoker"/>
											</core:EventTriggerBehavior>
										</i:Interaction.Behaviors>
									</ListView>
									<TextBlock Text="You save no saved searches"
											   FontSize="12"
											   Visibility="{Binding HaveSavedSearches}"/>
								</StackPanel>
								<StackPanel Orientation="Vertical" MaxWidth="350">
									<TextBlock Text="Add tags"></TextBlock>
									<StackPanel Orientation="Horizontal">
										<ComboBox SelectedIndex="{Binding SelectedPrefixIndex, Mode=TwoWay}"
												  ItemsSource="{Binding Prefixes}"
												  Margin="4, 0"
												  AllowFocusOnInteraction="True"
												  PlaceholderText="Prefix"/>
										<AutoSuggestBox PlaceholderText="Tag"
											 Name="TagTextBox"
											 MinWidth="220"
											 Text="{Binding CurrentTag, Mode=TwoWay, 
													UpdateSourceTrigger=PropertyChanged}"
											 TextChanged="TagTextBox_TextChanged"
											 AllowFocusOnInteraction="True"
											 KeyUp="TagTextBox_KeyUp"
														ItemsSource="{Binding SuggestedTags}"
														UpdateTextOnSelect="True"
														/>
										<Button Name="AddTagButton" 
											Margin="4, 0, 0, 0"
											Background="{StaticResource ThemeBrush}" 
											Foreground="White"
											Click="AddTagClicked"
											Command="{Binding AddTag}">
											<Button.Content>
												<SymbolIcon>Add</SymbolIcon>
											</Button.Content>
										</Button>

									</StackPanel>

									<StackPanel Orientation="Horizontal" Margin="0, 4">
										<Button Command="{Binding DecrementPage}"
												Margin="4, 0, 2, 0">
											<Button.Content>
												<StackPanel>
													<SymbolIcon Symbol="Remove"/>
												</StackPanel>
											</Button.Content>
										</Button>
										<TextBox Text="{Binding PageNum, Mode=TwoWay}"
											 HorizontalAlignment="Left"
											 Margin="4, 0"
											 PlaceholderText="Page"
											 AllowFocusOnInteraction="True"
											 Name="StartPageTextBox"
											 InputScope="Number"/>

										<Button Command="{Binding IncrementPage}"
												Margin="2, 0, 4, 0">
											<Button.Content>
												<StackPanel>
													<SymbolIcon Symbol="Add"/>
												</StackPanel>
											</Button.Content>
										</Button>
										<ComboBox ItemsSource="{Binding OrderOptions}"
												  SelectedIndex="{Binding SelectedOrderIndex, Mode=TwoWay}"
												  AllowFocusOnInteraction="True"
												  PlaceholderText="Order by"/>
									</StackPanel>
									<ListView
											ItemsSource="{Binding CurrentTags, Mode=TwoWay}"
											ItemTemplate="{StaticResource Tag}"
											MinHeight="20"
											SelectionMode="None"
											ItemContainerStyle="{StaticResource TagStyleNoMargin}"
											HorizontalContentAlignment="Left"
											MaxWidth="{Binding ElementName=RootGrid, Path=ActualWidth}"
											Name="CurrentTagsList">
										<ListView.ItemsPanel>
											<ItemsPanelTemplate>
												<wrapPanel:WrapPanel Orientation="Horizontal"
																	   />
											</ItemsPanelTemplate>
										</ListView.ItemsPanel>
									</ListView>

									<StackPanel Orientation="Horizontal"
											FlowDirection="RightToLeft"
												 Margin="8">
										<Button
											Content="Search Your Favourites"
											Command="{Binding SearchFavourites}"
											Visibility="{Binding IsFavButtonVisible}"
											Name="SearchFavouritesButton"
											Margin="8, 0"></Button>
										<Button Content="Save Search"
												Command="{Binding SaveSearch}"
												
												Name="SaveSearchButton"/>
									</StackPanel>
									<Button MinWidth="290" HorizontalAlignment="Center"
										Background="{StaticResource ThemeBrush}" 
										Foreground="White"
										Command="{Binding StartSearch}"
										Name="SearchButton"
											Tapped="SearchButton_OnTapped">

										<Button.Content>
											<SymbolIcon>Find</SymbolIcon>
										</Button.Content>
									</Button>
								</StackPanel>
							</StackPanel>
						</Flyout>
					</AppBarButton.Flyout>
				</AppBarButton>
				<AppBarButton Label="Settings" Icon="Setting"
							  Tapped="SettingsTapped">
					<AppBarButton.Flyout>
						<Flyout>
							<Flyout.FlyoutPresenterStyle>
								<Style TargetType="FlyoutPresenter">
									<Setter Property="Height" Value="{ThemeResource FlyoutThemeMaxHeight}"></Setter>
									<Setter Property="IsTapEnabled" Value="True"></Setter>
								</Style>
							</Flyout.FlyoutPresenterStyle>
							<StackPanel Orientation="Vertical" MinWidth="300">
								<StackPanel Orientation="Horizontal">
									<CheckBox Content="Safe"
											  MinWidth="42"
											  Name="SafeCheckbox"
											  IsChecked="{Binding SafeChecked, Mode=TwoWay}"
											  Command="{Binding CheckBoxChanged}"
											  Margin="4"
											  CommandParameter="{Binding ElementName=SafeCheckbox}"/>
									<CheckBox Content="Questionable"
											  Name="QuestionableCheckbox"
											  IsChecked="{Binding QuestionableChecked, Mode=TwoWay}"
											  Command="{Binding CheckBoxChanged}"
											  CommandParameter="{Binding ElementName=QuestionableCheckbox}"
											  MinWidth="42"
											  Margin="4"/>
									<CheckBox Content="Explicit"
											  Name="ExplicitCheckbox"
											  IsChecked="{Binding ExplicitChecked, Mode=TwoWay}"
											  Command="{Binding CheckBoxChanged}"
											  CommandParameter="{Binding ElementName=ExplicitCheckbox}"
											  MinWidth="42"
											  Margin="4"/>
								</StackPanel>
								<TextBlock Text="Images Per Page"/>
								<Slider 
									Maximum="100"
									Value="{Binding PerPage, Mode=TwoWay}"
									Minimum="10"
									StepFrequency="1"
									SnapsTo="StepValues"
									/>
								<TextBlock Text="Thumbnail Size"/>
								<Slider Minimum="100" Maximum="900"
										SnapsTo="StepValues"
										StepFrequency="15"
										Value="{Binding ImageSize, Mode=TwoWay}"
										Name="ImageHeightSlider"
										IsThumbToolTipEnabled="False"/>
								<TextBlock Text="Login Details"
										   Margin="0, 0, 0, 5"/>
								<TextBox PlaceholderText="Username"
										 Margin="0, 0, 0, 5"
										 Text="{Binding Username, Mode=TwoWay}"
										 AllowFocusOnInteraction="True"
										 Name="UsernameTextBox"/>
								<TextBox PlaceholderText="API Key"
										 Margin="0, 0, 0, 5"
										 Text="{Binding APIKey, Mode=TwoWay}"
										 AllowFocusOnInteraction="True"
										 IsEnabled="True" InputScope="Text" IsSpellCheckEnabled="False"
										 Name="APIKeyTextBox"
										 TextChanged="APIKeyTextBox_TextChanged"/>

								<Button Width="280" HorizontalAlignment="Center"
										Background="{StaticResource ThemeBrush}"
										Foreground="White"
										Command="{Binding SaveLoginData}"
										Tapped="SaveLoginDataButtonTapped">
									<Button.Content>
										<SymbolIcon>Save</SymbolIcon>
									</Button.Content>
								</Button>
							</StackPanel>
						</Flyout>
					</AppBarButton.Flyout>
				</AppBarButton>
			</CommandBar.PrimaryCommands>
		</CommandBar>
	</Page.BottomAppBar>
</Page>
	